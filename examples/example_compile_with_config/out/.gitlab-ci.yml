---
# DO NOT EDIT
# This is a compiled file, compiled with bash2gitlab
# Recompile instead of editing this file.
variables:
  PROGRAM_NAME: payroll_tax
  EXECUTABLE_NAME: payroll_tax_calculator
stages:
  - build
  - test
# Use a Docker image that has GnuCOBOL pre-installed. Z
# You can find various images on Docker Hub or create your own.
default:
  image: hurriedreformist/gnucobol:latest
# --- Build Stage ---
# This job compiles the GnuCOBOL source code into an executable file.
build_cobol_program:
  stage: build
  script: |-
    # The -x flag creates an executable.
    # The -o flag specifies the output name for the executable.
    if [[ "${CI:-}" == "" ]]; then
      . global_variables.sh
    fi
    cobc -x -o ${EXECUTABLE_NAME} ${PROGRAM_NAME}.cbl
    echo "Compilation successful. Executable created."
  artifacts:
    # Pass the compiled executable to the next stage (test).
    # The artifact will be available in subsequent jobs.
    paths:
      - ${EXECUTABLE_NAME}
    # Set an expiration for the artifact to keep the system clean.
    expire_in: 1 week
# --- Test Stage ---
# This job runs the compiled program with some test data to verify its output.
test_payroll_calculation:
  stage: test
  script: |-
    if [[ "${CI:-}" == "" ]]; then
      . global_variables.sh
    fi
    # Make the artifact from the build stage executable
    chmod +x ${EXECUTABLE_NAME}
    # Create a dummy test file with sample input data
    # In a real scenario, this might be a more complex test script or set of files.
    echo "1000.00" > test_input.dat
    echo "Running test with input from test_input.dat..."
    # Execute the program and pipe the test data into it.
    # Then, use 'grep' to check if the output contains the expected result.
    # This is a simple example; a real test would be more robust.
    # Let's assume for a $1000 gross pay, the expected tax is $150.00.
    ./$EXECUTABLE_NAME < test_input.dat | grep "Calculated Tax: 150.00"
    echo "Test passed: The calculated tax is correct."
  dependencies: [build_cobol_program]
